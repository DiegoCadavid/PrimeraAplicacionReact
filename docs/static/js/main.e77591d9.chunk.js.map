{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.jsx","GitExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","className","type","placeholder","value","onChange","target","GifGridItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","console","log","useFetchGifs","loading","state","setState","useEffect","then","res","GifGrid","image","GitExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAqCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAK,GAAC,OAAKH,GAAL,mBAAqBG,OACrCF,EAAc,MAKlB,SACI,uBACIM,UAAU,+BACVC,KAAK,OACLC,YAAY,wBACZC,MAAOV,EACPW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,aCUhBG,EAhBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1B,OACI,mCACI,oBAAIR,UAAU,mDAAd,SACI,sBAAKA,UAAU,kDAAf,UACI,qBAAKS,IAAKD,EAAKE,IAAKH,EAAOP,UAAU,aACrC,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BO,c,uBCUrCI,EAlBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNL,EADM,iDAC0CM,UAAUF,GADpD,+DAEOG,MAAMP,GAFb,cAENQ,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAKa,EAAIE,OAAOC,iBAAiBhB,QAIzCiB,QAAQC,IAAIP,GAbA,kBAeLA,GAfK,4CAAH,sDCsBEQ,EApBM,SAAEf,GACnB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNU,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACPpB,EAAQC,GAAUoB,MAAM,SAAAC,GACpBH,EAAS,CACLZ,KAAOe,EACPL,SAAU,SAGpB,CAAChB,IAEIiB,GCEIK,EAhBC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SACf,EAAiCe,EAAcf,GAAlCW,EAAb,EAAQL,KAAaU,EAArB,EAAqBA,QAErB,OACI,gCACI,qBAAI5B,UAAU,cAAd,cAA+BY,EAA/B,OACEgB,GAAY,mBAAG5B,UAAU,mCAAb,yBAEVuB,EAAOH,KAAI,SAAAe,GACP,OAAQ,cAAC,EAAD,CAA4B3B,IAAK2B,EAAM3B,IAAKD,MAAO4B,EAAM5B,OAAvC4B,EAAMb,WCSrCc,EAlBM,WAEjB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,sBAAKS,UAAU,YAAf,UACI,oBAAIA,UAAU,uEAAd,0BACA,cAAC,EAAD,CAAaT,cAAgBA,IAC7B,uBACA,oBAAIS,UAAU,MAAd,SAEIqC,EAAWjB,KAAK,SAAAR,GAAQ,OAAK,cAAC,EAAD,CAASA,SAAWA,EAAyBZ,UAAU,IAApBY,Y,MCVhF0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e77591d9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( e => [inputValue , ...e]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                className='form-control shadow-sm w-100'\r\n                type=\"text\"\r\n                placeholder='Escribe tu superHeroe'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <>\r\n            <li className='d-inline item  animate__animated animate__fadeIn'>\r\n                <div className='card m-2 bg-dark text-white d-inline-block w-35'>\r\n                    <img src={url} alt={title} className='card-img' />\r\n                    <div className='card-img-overlay'>\r\n                        <h5 className=\"card-title\">{title}</h5>\r\n                    </div>\r\n                </div>\r\n\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\nconst getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OXeJqb2xnMHOWKp1vCSskkBldvhUBSui`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import { useEffect, useState } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then( res => {\r\n            setState({\r\n                data : res,\r\n                loading : false\r\n            })\r\n        });\r\n    },[category]) \r\n\r\n    return state; // { data: [], loading: true }\r\n}\r\n\r\n\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\nimport GifGridItem from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='text-center' > {category} </h3>\r\n            { loading  && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n            {\r\n                images.map(image => {\r\n                    return (<GifGridItem key={image.id} url={image.url} title={image.title} />)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GitExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['OnePunchMan'])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className='text-center pt-4 bg-dark pb-4 my-2 text-light shadow fw-bold rounded'>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <br />\r\n            <ol className='p-0'>\r\n            {\r\n                categories.map( category => (<GifGrid category= {category} key={category} className=\"\" /> ) )\r\n            }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GitExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GitExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// H2 > gifexpertApp\n// HR"],"sourceRoot":""}